# Run the comprehensive analysis
comprehensive_results <- run_comprehensive_analysis()
# Additional specialized analysis for specific cleavages
analyze_specific_cleavage_trends <- function(data, cleavage_type) {
cat("Analyzing", cleavage_type, "trends...\n")
if (cleavage_type == "gender") {
plot_data <- data %>%
filter(!is.na(gender_gap), !is.na(internet_penetration)) %>%
group_by(year) %>%
summarise(
avg_gap = mean(gender_gap, na.rm = TRUE),
avg_internet = mean(internet_penetration, na.rm = TRUE),
.groups = "drop"
)
p <- ggplot(plot_data, aes(x = avg_internet, y = avg_gap)) +
geom_point(size = 3, color = "steelblue") +
geom_text(aes(label = year), vjust = -0.5, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "red", alpha = 0.3) +
labs(title = "Gender Gap in Education vs Internet Penetration Over Time",
subtitle = "Average across African countries by year",
x = "Average Internet Penetration (%)",
y = "Average Gender Gap in Education (years, M-F)") +
theme_minimal()
} else if (cleavage_type == "rural_urban") {
plot_data <- data %>%
filter(!is.na(rural_urban_gap), !is.na(internet_penetration)) %>%
group_by(year) %>%
summarise(
avg_gap = mean(rural_urban_gap, na.rm = TRUE),
avg_internet = mean(internet_penetration, na.rm = TRUE),
.groups = "drop"
)
p <- ggplot(plot_data, aes(x = avg_internet, y = avg_gap)) +
geom_point(size = 3, color = "darkgreen") +
geom_text(aes(label = year), vjust = -0.5, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "red", alpha = 0.3) +
labs(title = "Rural-Urban Gap in Education vs Internet Penetration Over Time",
subtitle = "Average across African countries by year",
x = "Average Internet Penetration (%)",
y = "Average Rural-Urban Gap in Education (years, Urban-Rural)") +
theme_minimal()
} else if (cleavage_type == "socioeconomic") {
plot_data <- data %>%
filter(!is.na(socioeconomic_gap), !is.na(internet_penetration)) %>%
group_by(year) %>%
summarise(
avg_gap = mean(socioeconomic_gap, na.rm = TRUE),
avg_internet = mean(internet_penetration, na.rm = TRUE),
.groups = "drop"
)
p <- ggplot(plot_data, aes(x = avg_internet, y = avg_gap)) +
geom_point(size = 3, color = "purple") +
geom_text(aes(label = year), vjust = -0.5, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "red", alpha = 0.3) +
labs(title = "Socioeconomic Gap in Education vs Internet Penetration Over Time",
subtitle = "Average across African countries by year",
x = "Average Internet Penetration (%)",
y = "Average Socioeconomic Gap in Education (years, High-Low)") +
theme_minimal()
}
return(p)
}
# Create specific cleavage plots
if (!is.null(comprehensive_results)) {
gender_trend_plot <- analyze_specific_cleavage_trends(comprehensive_results$data, "gender")
rural_urban_trend_plot <- analyze_specific_cleavage_trends(comprehensive_results$data, "rural_urban")
socioeconomic_trend_plot <- analyze_specific_cleavage_trends(comprehensive_results$data, "socioeconomic")
print(gender_trend_plot)
print(rural_urban_trend_plot)
print(socioeconomic_trend_plot)
# Save specialized plots
ggsave("plot_results/09_gender_gap_vs_internet_trend.png", gender_trend_plot,
width = 10, height = 7, dpi = 300)
ggsave("plot_results/10_rural_urban_gap_vs_internet_trend.png", rural_urban_trend_plot,
width = 10, height = 7, dpi = 300)
ggsave("plot_results/11_socioeconomic_gap_vs_internet_trend.png", socioeconomic_trend_plot,
width = 10, height = 7, dpi = 300)
}
cat("\n=== ALL ANALYSES COMPLETED ===\n")
cat("Check 'plot_results' folder for saved graphs\n")
cat("Results available in 'comprehensive_results' object\n")
# ====================================================================
# REGIONAL AND LANGUAGE ANALYSIS EXTENSION
# Description: Extend gap analysis to examine regional and language variations
# Author: Extension to Robyn Elrick's analysis
# Date: May 2025
# ====================================================================
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
library(corrplot)
library(gridExtra)
library(scales)
library(patchwork)  # For combining plots
# ====================================================================
# REGIONAL AND LANGUAGE MAPPING FUNCTIONS
# ====================================================================
# Function to add regional and language classifications
add_regional_language_data <- function(comprehensive_data, lang_region_expanded) {
cat("Adding regional and language classifications...\n")
# Clean and prepare lang_region_expanded data
lang_region_clean <- lang_region_expanded %>%
select(Country, InstLang, Region) %>%
distinct() %>%
# Standardize country names to match comprehensive_data
mutate(
Country = case_when(
Country == "Bostwana" ~ "Botswana",  # Fix typo
Country == "CAR" ~ "Central African Republic",
TRUE ~ Country
)
)
# Create language groupings
lang_mapping <- lang_region_clean %>%
mutate(
language_group = case_when(
InstLang == "Fr" ~ "French",
InstLang == "Eng" ~ "English",
InstLang == "Port" ~ "Portuguese",
InstLang == "Other" ~ "Other",
TRUE ~ "Other"
)
) %>%
select(country = Country, region = Region, language_group)
# Handle countries with multiple language classifications
# For analysis, we'll take the first (most common) classification per country
lang_mapping_unique <- lang_mapping %>%
group_by(country) %>%
slice(1) %>%
ungroup()
# Merge with comprehensive data
enhanced_data <- comprehensive_data %>%
left_join(lang_mapping_unique, by = "country")
# Check coverage
countries_with_classification <- enhanced_data %>%
filter(!is.na(region), !is.na(language_group)) %>%
pull(country) %>%
unique()
countries_without_classification <- enhanced_data %>%
filter(is.na(region) | is.na(language_group)) %>%
pull(country) %>%
unique()
cat("Countries with regional/language classification:", length(countries_with_classification), "\n")
cat("Countries without classification:", length(countries_without_classification), "\n")
if(length(countries_without_classification) > 0) {
cat("Missing classifications for:", paste(countries_without_classification, collapse = ", "), "\n")
}
return(enhanced_data)
}
# ====================================================================
# REGIONAL ANALYSIS FUNCTIONS
# ====================================================================
# Function to analyze correlations by region
analyze_correlations_by_region <- function(enhanced_data) {
cat("Analyzing correlations by region...\n")
# Filter data with regional classifications
regional_data <- enhanced_data %>%
filter(!is.na(region))
regions <- unique(regional_data$region)
correlation_results <- list()
for(reg in regions) {
cat("  Processing region:", reg, "\n")
region_subset <- regional_data %>%
filter(region == reg) %>%
select(internet_penetration, gender_gap, rural_urban_gap, socioeconomic_gap) %>%
filter(complete.cases(.))
if(nrow(region_subset) >= 10) {  # Minimum observations for meaningful correlation
cor_matrix <- cor(region_subset, use = "complete.obs")
correlation_results[[reg]] <- list(
n_obs = nrow(region_subset),
correlations = cor_matrix,
internet_gender = cor_matrix["internet_penetration", "gender_gap"],
internet_rural_urban = cor_matrix["internet_penetration", "rural_urban_gap"],
internet_socioeconomic = cor_matrix["internet_penetration", "socioeconomic_gap"]
)
} else {
cat("    ⚠ Insufficient data for region", reg, "(n =", nrow(region_subset), ")\n")
}
}
return(correlation_results)
}
# Function to analyze correlations by language
analyze_correlations_by_language <- function(enhanced_data) {
cat("Analyzing correlations by language group...\n")
# Filter data with language classifications
language_data <- enhanced_data %>%
filter(!is.na(language_group))
languages <- unique(language_data$language_group)
correlation_results <- list()
for(lang in languages) {
cat("  Processing language group:", lang, "\n")
language_subset <- language_data %>%
filter(language_group == lang) %>%
select(internet_penetration, gender_gap, rural_urban_gap, socioeconomic_gap) %>%
filter(complete.cases(.))
if(nrow(language_subset) >= 10) {  # Minimum observations for meaningful correlation
cor_matrix <- cor(language_subset, use = "complete.obs")
correlation_results[[lang]] <- list(
n_obs = nrow(language_subset),
correlations = cor_matrix,
internet_gender = cor_matrix["internet_penetration", "gender_gap"],
internet_rural_urban = cor_matrix["internet_penetration", "rural_urban_gap"],
internet_socioeconomic = cor_matrix["internet_penetration", "socioeconomic_gap"]
)
} else {
cat("    ⚠ Insufficient data for language", lang, "(n =", nrow(language_subset), ")\n")
}
}
return(correlation_results)
}
# ====================================================================
# VISUALIZATION FUNCTIONS
# ====================================================================
# Function to create regional comparison plots
create_regional_plots <- function(enhanced_data, regional_correlations) {
# 1. Scatter plots by region
regional_scatter_data <- enhanced_data %>%
filter(!is.na(region)) %>%
select(country, year, region, internet_penetration, gender_gap, rural_urban_gap, socioeconomic_gap) %>%
pivot_longer(cols = c(gender_gap, rural_urban_gap, socioeconomic_gap),
names_to = "gap_type", values_to = "gap_value") %>%
filter(!is.na(gap_value), !is.na(internet_penetration)) %>%
mutate(gap_type = case_when(
gap_type == "gender_gap" ~ "Gender Gap (M-F)",
gap_type == "rural_urban_gap" ~ "Rural-Urban Gap (U-R)",
gap_type == "socioeconomic_gap" ~ "Socioeconomic Gap (H-L)"
))
p1 <- ggplot(regional_scatter_data, aes(x = internet_penetration, y = gap_value, color = region)) +
geom_point(alpha = 0.6, size = 1.5) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.3) +
facet_wrap(~gap_type, scales = "free_y") +
labs(title = "Educational Gaps vs Internet Penetration by Region",
subtitle = "Regional differences in the relationship between internet access and educational inequalities",
x = "Internet Penetration (% of population)",
y = "Educational Gap (years)",
color = "Region") +
theme_minimal() +
theme(legend.position = "bottom")
# 2. Regional correlation comparison
if(length(regional_correlations) > 0) {
correlation_summary <- map_dfr(names(regional_correlations), function(reg) {
data.frame(
region = reg,
n_obs = regional_correlations[[reg]]$n_obs,
gender_corr = regional_correlations[[reg]]$internet_gender,
rural_urban_corr = regional_correlations[[reg]]$internet_rural_urban,
socioeconomic_corr = regional_correlations[[reg]]$internet_socioeconomic
)
}) %>%
pivot_longer(cols = c(gender_corr, rural_urban_corr, socioeconomic_corr),
names_to = "gap_type", values_to = "correlation") %>%
mutate(gap_type = case_when(
gap_type == "gender_corr" ~ "Gender Gap",
gap_type == "rural_urban_corr" ~ "Rural-Urban Gap",
gap_type == "socioeconomic_corr" ~ "Socioeconomic Gap"
))
p2 <- ggplot(correlation_summary, aes(x = region, y = correlation, fill = gap_type)) +
geom_col(position = "dodge", alpha = 0.8) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
labs(title = "Correlation Coefficients: Internet Penetration vs Educational Gaps by Region",
subtitle = "Negative values indicate gaps decrease as internet penetration increases",
x = "Region",
y = "Correlation Coefficient",
fill = "Gap Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# 3. Sample sizes by region
sample_size_data <- map_dfr(names(regional_correlations), function(reg) {
data.frame(
region = reg,
n_obs = regional_correlations[[reg]]$n_obs
)
})
p3 <- ggplot(sample_size_data, aes(x = reorder(region, n_obs), y = n_obs)) +
geom_col(fill = "steelblue", alpha = 0.8) +
geom_text(aes(label = n_obs), hjust = -0.1, size = 3) +
coord_flip() +
labs(title = "Sample Sizes by Region",
subtitle = "Number of complete observations for correlation analysis",
x = "Region",
y = "Number of Observations") +
theme_minimal()
return(list(scatter = p1, correlations = p2, sample_sizes = p3))
} else {
return(list(scatter = p1))
}
}
# Function to create language comparison plots
create_language_plots <- function(enhanced_data, language_correlations) {
# 1. Scatter plots by language
language_scatter_data <- enhanced_data %>%
filter(!is.na(language_group)) %>%
select(country, year, language_group, internet_penetration, gender_gap, rural_urban_gap, socioeconomic_gap) %>%
pivot_longer(cols = c(gender_gap, rural_urban_gap, socioeconomic_gap),
names_to = "gap_type", values_to = "gap_value") %>%
filter(!is.na(gap_value), !is.na(internet_penetration)) %>%
mutate(gap_type = case_when(
gap_type == "gender_gap" ~ "Gender Gap (M-F)",
gap_type == "rural_urban_gap" ~ "Rural-Urban Gap (U-R)",
gap_type == "socioeconomic_gap" ~ "Socioeconomic Gap (H-L)"
))
p1 <- ggplot(language_scatter_data, aes(x = internet_penetration, y = gap_value, color = language_group)) +
geom_point(alpha = 0.6, size = 1.5) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.3) +
facet_wrap(~gap_type, scales = "free_y") +
labs(title = "Educational Gaps vs Internet Penetration by Language Group",
subtitle = "Language-based differences in the relationship between internet access and educational inequalities",
x = "Internet Penetration (% of population)",
y = "Educational Gap (years)",
color = "Language Group") +
theme_minimal() +
theme(legend.position = "bottom")
# 2. Language correlation comparison
if(length(language_correlations) > 0) {
correlation_summary <- map_dfr(names(language_correlations), function(lang) {
data.frame(
language_group = lang,
n_obs = language_correlations[[lang]]$n_obs,
gender_corr = language_correlations[[lang]]$internet_gender,
rural_urban_corr = language_correlations[[lang]]$internet_rural_urban,
socioeconomic_corr = language_correlations[[lang]]$internet_socioeconomic
)
}) %>%
pivot_longer(cols = c(gender_corr, rural_urban_corr, socioeconomic_corr),
names_to = "gap_type", values_to = "correlation") %>%
mutate(gap_type = case_when(
gap_type == "gender_corr" ~ "Gender Gap",
gap_type == "rural_urban_corr" ~ "Rural-Urban Gap",
gap_type == "socioeconomic_corr" ~ "Socioeconomic Gap"
))
p2 <- ggplot(correlation_summary, aes(x = language_group, y = correlation, fill = gap_type)) +
geom_col(position = "dodge", alpha = 0.8) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
labs(title = "Correlation Coefficients: Internet Penetration vs Educational Gaps by Language",
subtitle = "Negative values indicate gaps decrease as internet penetration increases",
x = "Language Group",
y = "Correlation Coefficient",
fill = "Gap Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# 3. Sample sizes by language
sample_size_data <- map_dfr(names(language_correlations), function(lang) {
data.frame(
language_group = lang,
n_obs = language_correlations[[lang]]$n_obs
)
})
p3 <- ggplot(sample_size_data, aes(x = reorder(language_group, n_obs), y = n_obs)) +
geom_col(fill = "darkgreen", alpha = 0.8) +
geom_text(aes(label = n_obs), hjust = -0.1, size = 3) +
coord_flip() +
labs(title = "Sample Sizes by Language Group",
subtitle = "Number of complete observations for correlation analysis",
x = "Language Group",
y = "Number of Observations") +
theme_minimal()
return(list(scatter = p1, correlations = p2, sample_sizes = p3))
} else {
return(list(scatter = p1))
}
}
# Function to create combined comparison plots
create_combined_comparison <- function(enhanced_data) {
# Average gaps by region and language over time
regional_trends <- enhanced_data %>%
filter(!is.na(region)) %>%
group_by(region, year) %>%
summarise(
avg_internet = mean(internet_penetration, na.rm = TRUE),
avg_gender_gap = mean(gender_gap, na.rm = TRUE),
avg_rural_urban_gap = mean(rural_urban_gap, na.rm = TRUE),
avg_socioeconomic_gap = mean(socioeconomic_gap, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_longer(cols = c(avg_gender_gap, avg_rural_urban_gap, avg_socioeconomic_gap),
names_to = "gap_type", values_to = "avg_gap") %>%
filter(!is.na(avg_gap)) %>%
mutate(gap_type = case_when(
gap_type == "avg_gender_gap" ~ "Gender Gap",
gap_type == "avg_rural_urban_gap" ~ "Rural-Urban Gap",
gap_type == "avg_socioeconomic_gap" ~ "Socioeconomic Gap"
))
p1 <- ggplot(regional_trends, aes(x = year, y = avg_gap, color = region)) +
geom_line(size = 1, alpha = 0.8) +
geom_point(size = 1.5, alpha = 0.7) +
facet_wrap(~gap_type, scales = "free_y") +
labs(title = "Evolution of Educational Gaps by Region",
subtitle = "Regional trends in educational inequalities over time",
x = "Year",
y = "Average Educational Gap (years)",
color = "Region") +
theme_minimal() +
theme(legend.position = "bottom")
# Language trends
language_trends <- enhanced_data %>%
filter(!is.na(language_group)) %>%
group_by(language_group, year) %>%
summarise(
avg_internet = mean(internet_penetration, na.rm = TRUE),
avg_gender_gap = mean(gender_gap, na.rm = TRUE),
avg_rural_urban_gap = mean(rural_urban_gap, na.rm = TRUE),
avg_socioeconomic_gap = mean(socioeconomic_gap, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_longer(cols = c(avg_gender_gap, avg_rural_urban_gap, avg_socioeconomic_gap),
names_to = "gap_type", values_to = "avg_gap") %>%
filter(!is.na(avg_gap)) %>%
mutate(gap_type = case_when(
gap_type == "avg_gender_gap" ~ "Gender Gap",
gap_type == "avg_rural_urban_gap" ~ "Rural-Urban Gap",
gap_type == "avg_socioeconomic_gap" ~ "Socioeconomic Gap"
))
p2 <- ggplot(language_trends, aes(x = year, y = avg_gap, color = language_group)) +
geom_line(size = 1, alpha = 0.8) +
geom_point(size = 1.5, alpha = 0.7) +
facet_wrap(~gap_type, scales = "free_y") +
labs(title = "Evolution of Educational Gaps by Language Group",
subtitle = "Language-based trends in educational inequalities over time",
x = "Year",
y = "Average Educational Gap (years)",
color = "Language Group") +
theme_minimal() +
theme(legend.position = "bottom")
return(list(regional_trends = p1, language_trends = p2))
}
# ====================================================================
# MAIN EXECUTION FUNCTION FOR REGIONAL/LANGUAGE ANALYSIS
# ====================================================================
run_regional_language_analysis <- function(comprehensive_results, lang_region_expanded) {
cat("=== STARTING REGIONAL AND LANGUAGE ANALYSIS ===\n\n")
if(is.null(comprehensive_results) || is.null(comprehensive_results$data)) {
cat("⚠ No comprehensive results found. Please run main analysis first.\n")
return(NULL)
}
# Add regional and language classifications
enhanced_data <- add_regional_language_data(comprehensive_results$data, lang_region_expanded)
# Analyze correlations by region
regional_correlations <- analyze_correlations_by_region(enhanced_data)
# Analyze correlations by language
language_correlations <- analyze_correlations_by_language(enhanced_data)
# Create visualization plots
regional_plots <- create_regional_plots(enhanced_data, regional_correlations)
language_plots <- create_language_plots(enhanced_data, language_correlations)
combined_plots <- create_combined_comparison(enhanced_data)
# Display plots
print(regional_plots$scatter)
if(!is.null(regional_plots$correlations)) print(regional_plots$correlations)
if(!is.null(regional_plots$sample_sizes)) print(regional_plots$sample_sizes)
print(language_plots$scatter)
if(!is.null(language_plots$correlations)) print(language_plots$correlations)
if(!is.null(language_plots$sample_sizes)) print(language_plots$sample_sizes)
print(combined_plots$regional_trends)
print(combined_plots$language_trends)
# Save plots
ggsave("plot_results/12_regional_gaps_vs_internet.png", regional_plots$scatter,
width = 14, height = 10, dpi = 300)
ggsave("plot_results/13_language_gaps_vs_internet.png", language_plots$scatter,
width = 14, height = 10, dpi = 300)
ggsave("plot_results/14_regional_trends.png", combined_plots$regional_trends,
width = 14, height = 10, dpi = 300)
ggsave("plot_results/15_language_trends.png", combined_plots$language_trends,
width = 14, height = 10, dpi = 300)
if(!is.null(regional_plots$correlations)) {
ggsave("plot_results/16_regional_correlations.png", regional_plots$correlations,
width = 12, height = 8, dpi = 300)
}
if(!is.null(language_plots$correlations)) {
ggsave("plot_results/17_language_correlations.png", language_plots$correlations,
width = 12, height = 8, dpi = 300)
}
# Print summary results
cat("\n=== REGIONAL ANALYSIS SUMMARY ===\n")
for(region in names(regional_correlations)) {
cat("Region:", region, "\n")
cat("  Sample size:", regional_correlations[[region]]$n_obs, "\n")
cat("  Internet vs Gender Gap:", round(regional_correlations[[region]]$internet_gender, 3), "\n")
cat("  Internet vs Rural-Urban Gap:", round(regional_correlations[[region]]$internet_rural_urban, 3), "\n")
cat("  Internet vs Socioeconomic Gap:", round(regional_correlations[[region]]$internet_socioeconomic, 3), "\n\n")
}
cat("\n=== LANGUAGE ANALYSIS SUMMARY ===\n")
for(language in names(language_correlations)) {
cat("Language Group:", language, "\n")
cat("  Sample size:", language_correlations[[language]]$n_obs, "\n")
cat("  Internet vs Gender Gap:", round(language_correlations[[language]]$internet_gender, 3), "\n")
cat("  Internet vs Rural-Urban Gap:", round(language_correlations[[language]]$internet_rural_urban, 3), "\n")
cat("  Internet vs Socioeconomic Gap:", round(language_correlations[[language]]$internet_socioeconomic, 3), "\n\n")
}
# Return results
results <- list(
enhanced_data = enhanced_data,
regional_correlations = regional_correlations,
language_correlations = language_correlations,
regional_plots = regional_plots,
language_plots = language_plots,
combined_plots = combined_plots
)
cat("\n=== REGIONAL AND LANGUAGE ANALYSIS COMPLETED ===\n")
return(results)
}
# ====================================================================
# EXECUTE REGIONAL AND LANGUAGE ANALYSIS
# ====================================================================
# Run the regional and language analysis
# Make sure you have run the comprehensive analysis first and have lang_region_expanded available
regional_language_results <- run_regional_language_analysis(comprehensive_results, lang_region_expanded)
cat("\n=== ANALYSIS EXTENSION COMPLETED ===\n")
cat("Results available in 'regional_language_results' object\n")
cat("New plots saved to 'plot_results' folder (files 12-17)\n")
